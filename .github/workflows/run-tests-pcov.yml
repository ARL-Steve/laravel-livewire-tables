name: run-tests-pcov

on: [pull_request,push]

jobs:
  test:
    runs-on: self-hosted
    env:
      runner: self-hosted
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        php: [8.2]
        laravel: [10]
        stability: [prefer-dist]

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, pcntl, pdo, sqlite, pdo_sqlite, bcmath, intl, iconv, fileinfo
          tools: phpunit:latest
          ini-values: memory_limit=512M
          coverage: pcov
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          runner: self-hosted

      - name: Setup problem matchers for PHP
        env:
          runner: self-hosted
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Get composer cache directory
        id: composer-cache
        env:
          runner: self-hosted
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        env:
          runner: self-hosted
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-PHP${{ matrix.php }}-Laravel${{ matrix.laravel }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-PHP${{ matrix.php }}-Laravel${{ matrix.laravel }}-composer-

      - name: Add token
        run: |
          composer config github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer require "laravel/framework:${{ matrix.laravel }}.*" --no-interaction --no-update

      - name: Update dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer update --${{ matrix.stability }} --no-interaction

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run Unit Tests
        run: php ./vendor/bin/paratest --cache-directory=".phpunit.cache/code-coverage" --strict-coverage --coverage-clover ./coverage.xml --processes=4

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          runner: self-hosted
        with:
          token: ${{ secrets.CODE_COV_TOKEN }}
          files: ./coverage.xml
          verbose: true


